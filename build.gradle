plugins {
    id 'org.jetbrains.kotlin.multiplatform' version '1.3.72'
}
repositories {
    mavenCentral()
}
kotlin {
    // For ARM, should be changed to iosArm32 or iosArm64
    // For Linux, should be changed to e.g. linuxX64
    // For MacOS, should be changed to e.g. macosX64
    // For Windows, should be changed to e.g. mingwX64
    linuxX64("linux") {
        binaries {
            executable {
                // Change to specify fully qualified name of your application's entry point:
               entryPoint = 'sample.main'
                // Specify command-line arguments, if necessary:
                runTask?.args('')
            }
        }
        compilations.main {
            cinterops {
                myInterop {
                    // Def-file describing the native API.
                    // The default path is src/nativeInterop/cinterop/<interop-name>.def
                    defFile project.file("/home/lanhuaguizha/workspace/kotlin/untitled/src/nativeInterop/cinterop/chapter4.def")

                    // Package to place the Kotlin API generated.
                    packageName 'chapter4'

                    // Options to be passed to compiler by cinterop tool.
//                    compilerOpts '-Ipath/to/headers'

                    // Directories for header search (an analogue of the -I<path> compiler option).
                    includeDirs.allHeaders("/usr/include", "/usr/include/x86_64-linux-gnu")

                    // Additional directories to search headers listed in the 'headerFilter' def-file option.
                    // -headerFilterAdditionalSearchPrefix command line option analogue.
//                    includeDirs.headerFilterOnly("/usr/include", "/usr/include/x86_64-linux-gnu")

                    // A shortcut for includeDirs.allHeaders.
//                    includeDirs("include/directory", "another/directory")
                }

//                anotherInterop { /* ... */ }
            }
        }

    }
    sourceSets {
        // Note: To enable common source sets please comment out 'kotlin.import.noCommonSourceSets' property
        // in gradle.properties file and re-import your project in IDE.
        linuxMain {
        }
        linuxTest {
        }
    }
}

// Use the following Gradle tasks to run your application:
// :runReleaseExecutableLinux - without debug symbols
// :runDebugExecutableLinux - with debug symbols